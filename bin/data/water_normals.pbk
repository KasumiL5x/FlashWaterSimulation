<languageVersion: 1.0;>

kernel water_normals
<
	namespace: "dgreen";
	vendor: "dgreen";
	version: 1;
>
{
	input image4 source;
	output pixel4 destination;

	void evaluatePixel()
	{
		// Simple passthrough for testing.
		//destination = sampleNearest(source, outCoord()).xyzw;
		
		float2 coord = outCoord();
		destination = sampleNearest(source, coord).xyzw;
		float delta = 1.0;// / (128.0);
		float3 n_dx = normalize(float3(delta, sampleNearest(source, float2(coord.x + delta, coord.y)).x - destination.x, 0.0));
		float3 n_dy = normalize(float3(0.0, sampleNearest(source, float2(coord.x, coord.y + delta)).x - destination.x, delta));
		float3 normal = normalize(cross(n_dy, n_dx));
		destination.z = normal.x;
		destination.w = normal.z;
	}
}

